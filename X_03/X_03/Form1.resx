<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>